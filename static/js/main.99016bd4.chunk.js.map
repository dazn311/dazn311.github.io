{"version":3,"sources":["components/header/index.js","components/header/headerComponent.js","store/context/products/productContext.js","components/news/itemList.js","components/news/itemsList.js","components/buttonGroup/index.js","components/buttonGroup/buttonGroup.js","services/GotService.js","screens/homeScreen.js","screens/favoriteScreen.js","store/reducers/productReducer.js","store/typeActions.js","store/context/products/ProductState.js","App.js","serviceWorker.js","index.js"],"names":["HeaderComponent","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","className","to","ProductContext","React","createContext","ItemList","item","value","icon_url","useState","isFav","setIsFav","useContext","addFavorite","removeFavorite","useEffect","isFavorite","colorStar","join","style","styles","li","src","alt","onClick","span2","color","protoTypes","PropTypes","object","isRequired","string","padding","border","borderRadius","marginBottom","display","justifyContent","span","marginRight","marginLeft","ItemsList","items","loader","itemlist","ul","map","index","key","console","log","length","propTypes","arrayOf","listStyle","margin","ButtonsGroup","eventButton","captionButton","Button","GotService","transformDataR","data","getResource","url","a","fetch","_apiBase","res","ok","Error","status","json","getProductAll","getProductById","this","initionalFavState","intervalLoopHandle","HomeScreen","isLoading","setIsLoading","setItems","playLoopInterval","setPlayLoopInterval","state","setFavoriteToLocal","gotService","updateItems","then","jsonData","transData","favList","stopPlayLoop","clearInterval","setInterval","loopCaptionButton","buttons","loading","FavoriteScreen","removeFavoriteAll","getFavorite","fav","setFav","setLoading","favorite","handlers","filter","slice","action","type","DEFAULT","initialState","JSON","parse","localStorage","getItem","ProductState","children","useReducer","productReducer","dispatch","removeLastFavorite","Provider","handelaaaadFav","setItem","stringify","App","exact","path","component","homeScreen","favoriteScreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99016bd4.chunk.js","sourcesContent":["import HeaderComponent from './headerComponent';\nexport default HeaderComponent;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nconst HeaderComponent = () => {\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand >ReactApp</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Link className=\"nav-link\" to=\"/\">Home</Link>\n          <Link className=\"nav-link\" to=\"/fav\">Favorite</Link>\n        </Nav>\n\n      </Navbar.Collapse>\n    </Navbar>\n\n\n  )\n}\n\nexport default HeaderComponent;","import React from 'react';\nexport const ProductContext = React.createContext();","import React, { useContext, useEffect, useState } from 'react';\r\nimport { ProductContext } from '../../store/context/products/productContext';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ItemList({ item, value, icon_url }) {\r\n    const [isFav, setIsFav] = useState(false);\r\n    const { addFavorite, removeFavorite } = useContext(ProductContext);\r\n\r\n    const toggleFavState = (id) => {\r\n        if (!isFav) {\r\n            addFavorite({ ...item, isFavorite: true });\r\n        } else {\r\n            removeFavorite(item.id);\r\n        }\r\n\r\n        setIsFav(!isFav);\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => { setIsFav(item.isFavorite) }, []);\r\n\r\n    const classes = ['animate__animated', 'animate__backInLeft']\r\n    let colorStar = isFav ? 'gold' : 'gray';\r\n\r\n    return (\r\n        <li className={classes.join(' ')} style={styles.li} >\r\n            <img src={icon_url} alt={''}></img>\r\n            <strong>{value}</strong>\r\n            <button onClick={() => toggleFavState(item.id)} style={styles.span2}><i style={{ color: colorStar }} className=\"fas fa-star\"></i></button>\r\n        </li>\r\n    )\r\n}\r\n\r\nItemList.protoTypes = {\r\n    item: PropTypes.object.isRequired,\r\n    value: PropTypes.string,\r\n    icon_url: PropTypes.string\r\n}\r\n\r\nconst styles = {\r\n    li: {\r\n        padding: '5px 10px',\r\n        border: '1px solid #ccc',\r\n        borderRadius: '4px',\r\n        marginBottom: '5px',\r\n        display: 'flex',\r\n        justifyContent: 'space-between'\r\n    },\r\n    span: {\r\n        marginRight: '3px'\r\n    },\r\n    span2: {\r\n        marginLeft: '3px'\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ItemList from './itemList';\r\n\r\nfunction ItemsList({ items, loader }) {\r\n\r\n    const itemlist = <ul style={styles.ul}>\r\n        {items.map((item, index) => (\r\n            <ItemList index={index}\r\n                item={item} value={item.value || 'not data'}\r\n                icon_url={item.icon_url} key={item.id + index}\r\n            ></ItemList>\r\n        ))}\r\n    </ul>;\r\n\r\n    console.log('ItemsList 77');\r\n\r\n    const listItems = items.length ? itemlist : loader;\r\n\r\n    return (listItems)\r\n}\r\n\r\nItemsList.propTypes = {\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none',\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}\r\n\r\n\r\nexport default ItemsList","import ButtonsGroup from './buttonGroup';\nexport default ButtonsGroup;","import React from 'react';\nimport {  Button } from 'react-bootstrap';\nimport './buttons.css';\n\nexport default function ButtonsGroup ({eventButton, captionButton}) { \n    return ( \n            <Button onClick={eventButton}>{captionButton}</Button>  \n    )\n}","export default class GotService {\r\n\r\n    constructor() {\r\n        this._apiBase = \"https://api.chucknorris.io/jokes\";\r\n\r\n    }\r\n\r\n    transformDataR = (data) => {\r\n        // console.log('newsService transformDataR  data', data);\r\n        return {\r\n            id: data.id,\r\n            value: data.value,\r\n            icon_url: data.icon_url,\r\n            isFavorite: false\r\n        }\r\n    }\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error('could not fetch' + url + `, received: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getProductAll = () => {\r\n        return this.getResource('/random');\r\n    }\r\n\r\n    getProductById = (id) => {\r\n        return this.getResource(`/${id}`);\r\n    }\r\n\r\n\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react';\nimport { ProductContext } from '../store/context/products/productContext';\nimport ItemsList from '../components/news/itemsList';\nimport ButtonsGroup from '../components/buttonGroup';\nimport GotService from '../services/GotService';\n\nconst initionalFavState = [];\nvar intervalLoopHandle = -1;\n\nexport default function HomeScreen() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [items, setItems] = React.useState(initionalFavState);\n    const [playLoopInterval, setPlayLoopInterval] = useState(false);\n    const { state, setFavoriteToLocal } = useContext(ProductContext);\n\n\n    const gotService = new GotService();\n\n    const updateItems = () => {\n        setIsLoading({ isLoading: true });\n\n        gotService.getProductAll()\n            .then((jsonData) => {\n                const transData = gotService.transformDataR(jsonData);\n                setIsLoading({ isLoading: false });\n                setItems([transData]);\n            });\n    }\n\n    useEffect(() => {\n        updateItems();\n        console.log('useEFf');\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        setFavoriteToLocal();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [state.favList]);\n\n\n    const stopPlayLoop = () => {\n        clearInterval(intervalLoopHandle);\n    }\n\n    useEffect(() => {\n        if (playLoopInterval) {\n            intervalLoopHandle = setInterval(() => { updateItems(); }, 3000);\n        } else {\n            stopPlayLoop();\n        }\n        return () => { stopPlayLoop() }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [playLoopInterval]);\n\n    const togglePlayLoop = () => {\n        if (playLoopInterval) {\n            setPlayLoopInterval(false);\n        } else {\n            setPlayLoopInterval(true);\n        }\n    }\n\n    let loopCaptionButton = !playLoopInterval ? 'loop' : 'stop loop';\n\n    const buttons = <div className=\"buttonGroup\">\n        <ButtonsGroup eventButton={updateItems} captionButton={'next'} />\n        <ButtonsGroup eventButton={togglePlayLoop} captionButton={loopCaptionButton} />\n    </div>;\n\n    const loader = <div className=\"loader\">Loading...</div>;\n\n    return (\n        <div>\n            <h1>Home Page</h1>\n            <ItemsList items={items} loader={loader} loading={isLoading} />\n            {buttons}\n        </div>\n    )\n\n\n}","import React, { useEffect, useContext, useState } from 'react';\n\nimport { ProductContext } from '../store/context/products/productContext';\nimport ItemsList from '../components/news/itemsList';\nimport ButtonsGroup from '../components/buttonGroup';\n\nexport default function FavoriteScreen() {\n    const { removeFavoriteAll, getFavorite } = useContext(ProductContext);\n\n    const [fav, setFav] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        const favorite = getFavorite();\n        setFav(favorite);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        // console.log('fav add', fav);\n        console.log('fav loading', loading);\n        setLoading(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fav]);\n\n\n    const buttons = <div className=\"buttonGroup\">\n        <ButtonsGroup eventButton={removeFavoriteAll} captionButton={'Remove Favorite All'} />\n    </div>;\n\n    const loader = <div className=\"no-fav alert-danger\">Избранных нет записей</div>;\n\n    return (\n        <div>\n            <h1>Fav Page</h1>\n            <ItemsList items={fav} loader={loader} loading={loading} />\n            {buttons}\n        </div>\n    )\n\n\n}","import { ADD_TO_FAVORITE, REMOVE_TO_FAVORITE, REMOVE_ALL_TO_FAVORITE, REMOVE_LAST_TO_FAVORITE } from '../typeActions';\n\nconst handlers = {\n  [ADD_TO_FAVORITE]: (state, { item }) => ({ ...state, favList: [...state.favList, item] }),\n  [REMOVE_TO_FAVORITE]: (state, { id }) => ({ ...state, favList: [...state.favList.filter(fav => fav.id !== id)] }),\n  [REMOVE_LAST_TO_FAVORITE]: (state) => ({ ...state, favList: [...state.favList.slice(0, -1)] }),\n  [REMOVE_ALL_TO_FAVORITE]: (state) => ({ ...state, favList: [] }),\n  DEFAULT: state => state\n}\n\nexport default function (state, action) {\n  const handler = handlers[action.type] || handlers.DEFAULT;\n  return handler(state, action)\n}\n","export const ADD_TO_FAVORITE = 'ADD_TO_FAVORITE';\r\nexport const REMOVE_TO_FAVORITE = 'REMOVE_TO_FAVORITE';\r\nexport const REMOVE_LAST_TO_FAVORITE = 'REMOVE_LAST_TO_FAVORITE';\r\nexport const REMOVE_ALL_TO_FAVORITE = 'REMOVE_ALL_TO_FAVORITE';","import React, { useReducer } from 'react';\nimport { ProductContext } from './productContext';\nimport productReducer from '../../reducers/productReducer';\nimport { ADD_TO_FAVORITE, REMOVE_TO_FAVORITE, REMOVE_ALL_TO_FAVORITE, REMOVE_LAST_TO_FAVORITE } from '../../typeActions';\n\nconst initialState = {\n    favList: JSON.parse(localStorage.getItem('favoritesElements')) || []\n}\n\nexport const ProductState = ({ children }) => {\n    const [state, dispatch] = useReducer(productReducer, initialState);\n\n\n\n    const handelaaaadFav = (item) => {\n        if (state.favList.length > 9) { removeLastFavorite(); }\n        dispatch({ type: ADD_TO_FAVORITE, item })\n\n    };\n    const addFavorite = item => { handelaaaadFav(item) };\n    const removeFavorite = id => dispatch({ type: REMOVE_TO_FAVORITE, id });\n    const removeLastFavorite = () => dispatch({ type: REMOVE_LAST_TO_FAVORITE });\n    const removeFavoriteAll = id => dispatch({ type: REMOVE_ALL_TO_FAVORITE });\n    const getFavorite = () => { return state.favList };\n    const setFavoriteToLocal = () => { localStorage.setItem('favoritesElements', JSON.stringify(state.favList)) };\n\n    return <ProductContext.Provider value={{\n        state,\n        addFavorite,\n        removeFavorite,\n        removeFavoriteAll,\n        getFavorite,\n        setFavoriteToLocal\n    }}>{children}</ProductContext.Provider>\n\n}\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport './App.css';\nimport HeaderComponent from './components/header'\nimport homeScreen from './screens/homeScreen'\nimport favoriteScreen from './screens/favoriteScreen'\nimport { ProductState } from './store/context/products/ProductState';\n\n\nfunction App() {\n  return (\n    <ProductState>\n      <BrowserRouter>\n        <div className=\"App\">\n          <HeaderComponent></HeaderComponent>\n          <Switch>\n            <Route exact path='/' component={homeScreen} />\n            <Route exact path='/fav' component={favoriteScreen} />\n            <Route component={homeScreen} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </ProductState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}